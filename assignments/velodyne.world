<?xml version="1.0" ?>
<sdf version="1.5">
  <world name="default">

    <!-- A global light source -->
    <include>
      <uri>model://sun</uri>
    </include>

    <!-- A ground plane -->
    <include>
      <uri>model://ground_plane</uri>
    </include>
    <model name="velodyne_puck">
    <!-- Give the base link a unique name -->
    <link name="base">

    <!-- Offset the base by half the lenght of the cylinder -->
    <pose>0 0 0.009400 0 0 0</pose>
     <inertial>
      <mass>0.4</mass>
      <inertia>
        <ixx>0.000278553</ixx>
        <iyy>0.000278553</iyy>
        <izz>0.000533544</izz>
        <ixy>0</ixy>
        <ixz>0</ixz>
        <iyz>0</iyz>
      </inertia>
     </inertial>
    <collision name="base_collision">
      <geometry>
        <cylinder>
          <!-- Radius and length provided by Velodyne -->
          <radius>.05165</radius>
          <length>.01880</length>
        </cylinder>
      </geometry>
    </collision>

    <!-- The visual is mostly a copy of the collision -->
    <visual name="base_visual">
      <geometry>
        <cylinder>
          <radius>.05165</radius>
          <length>.01880</length>
        </cylinder>
      </geometry>
    </visual>
    </link>
    <!-- Give the mid link a unique name -->
    <link name="middle">
    <!-- Vertically offset the middle cylinder by the length of the bottom
        cylinder and half the length of this cylinder. -->
    <pose>0 0 0.037850 0 0 0</pose>
    <inertial>
    <mass>0.215</mass>
    <inertia>
      <ixx>0.000132207</ixx>
      <iyy>0.000132207</iyy>
      <izz>0.000212398</izz>
      <ixy>0</ixy>
      <ixz>0</ixz>
      <iyz>0</iyz>
    </inertia>
    </inertial>
    <collision name="middle_collision">
      <geometry>
        <cylinder>
          <!-- Radius and length provided by Velodyne -->
          <radius>0.04445</radius>
          <length>0.03810</length>
        </cylinder>
      </geometry>
    </collision>

    <!-- The visual is mostly a copy of the collision -->
    <visual name="middle_visual">
      <geometry>
        <cylinder>
          <radius>0.04445</radius>
          <length>0.03810</length>
        </cylinder>
      </geometry>
    </visual>
    <sensor type="ray" name="sensor">

  <!-- Position the ray sensor based on the specification. Also rotate
       it by 90 degrees around the X-axis so that the <horizontal> rays
       become vertical -->
  <pose>0 0 -0.001003 1.5707 0 0</pose>

  <!-- Enable visualization to see the rays in the GUI -->
  <visualize>true</visualize>

  <!-- Set the update rate of the sensor -->
  <update_rate>30</update_rate>
  <ray>
  <noise>
      <!-- Use gaussian noise -->
      <type>gaussian</type>
      <mean>0.0</mean>
      <stddev>0.02</stddev>
    </noise>

  <!-- The scan element contains the horizontal and vertical beams.
       We are leaving out the vertical beams for this tutorial. -->
  <scan>

    <!-- The horizontal beams -->
    <horizontal>
      <!-- The velodyne has 16 beams(samples) -->
      <samples>16</samples>

      <!-- Resolution is multiplied by samples to determine number of
           simulated beams vs interpolated beams. See:
           http://sdformat.org/spec?ver=1.6&elem=sensor#horizontal_resolution
           -->
      <resolution>1</resolution>

      <!-- Minimum angle in radians -->
      <min_angle>-0.261799</min_angle>

      <!-- Maximum angle in radians -->
      <max_angle>0.261799</max_angle>
    </horizontal>
  </scan>

  <!-- Range defines characteristics of an individual beam -->
  <range>

    <!-- Minimum distance of the beam -->
    <min>0.05</min>

    <!-- Maximum distance of the beam -->
    <max>70</max>

    <!-- Linear resolution of the beam -->
    <resolution>0.02</resolution>
  </range>
</ray>
</sensor>
  </link>
  <!-- Give the top link a unique name. -->
  <link name = "top">
  <!-- Vertically offset the top cylinder by the length of the bottom
        cylinder+middle and half the length of this cylinder. -->
   <pose>0 0 0.064300 0 0 0</pose>
   <inertial>
    <mass>0.215</mass>
    <inertia>
      <ixx>0.000147314</ixx>
      <iyy>0.000147314</iyy>
      <izz>0.000286780</izz>
      <ixy>0</ixy>
      <ixz>0</ixz>
      <iyz>0</iyz>
    </inertia>
   </inertial>
   <collision name="top_collision">
     <geometry>
        <cylinder>
          <!-- Radius and length provided by Velodyne -->
          <radius>0.05165</radius>
          <length>0.01480</length>
        </cylinder>
      </geometry>
   </collision>

   <!-- The visual is mostly a copy of the collision -->
   <visual name="top_visual">
      <geometry>
        <cylinder>
          <radius>0.05165</radius>
          <length>0.01480</length>
        </cylinder>
      </geometry>
   </visual>
  </link>
  <joint type="revolute" name="joint">

  <!-- Position the joint at the bottom of the top link -->
  <pose>0 0 0.037850 0 0 0</pose>

  <!-- Use the base link as the parent of the joint -->
  <parent>base</parent>

  <!-- Use the middle link as the child of the joint -->
  <child>middle</child>

  <!-- The axis defines the joint's degree of freedom -->
  <axis>

    <!-- Revolve around the z-axis -->
    <xyz>0 0 1</xyz>

    <!-- Limit refers to the range of motion of the joint -->
    <limit>

      <!-- Use a very large number to indicate a continuous revolution -->
      <lower>-10000000000000000</lower>
      <upper>10000000000000000</upper>
    </limit>
  </axis>
  </joint>
  <joint type="fixed" name="joint2">

  <!-- Position the joint at the bottom of the top link -->
  <pose>0 0 0.064300 0 0 0</pose>

  <!-- Use the base link as the parent of the joint -->
  <parent>base</parent>

  <!-- Use the top link as the child of the joint -->
  <child>top</child>
  </joint>
 </model>
 </world>
</sdf>
